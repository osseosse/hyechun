<!DOCTYPE html>
<html lang="ko" xmlns:th="http://www.thymeleaf.org" xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout" layout:decorator="board/layout/basic">
	<th:block layout:fragment="title">
		<title>this is view page</title>
	</th:block>

	<th:block layout:fragment="modal">
		<div id="commentModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="commentModalLabel" aria-hidden="true">
		    <div class="modal-dialog" role="document">
		        <div class="modal-content">
		            <div class="modal-header">
		                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
		                <span aria-hidden="true">&times;</span>
		                </button>
		            </div>
		            <div class="modal-body">
		                <form>
		                    <div class="form-group">
		                        <label for="modalContent" class="col-form-label">링크</label>
		                        <textarea id="modalContent" class="form-control" placeholder="내용을 입력해 주세요."></textarea>
		                    </div>
		                </form>
		            </div>
		            <div class="modal-footer">
		                <button type="button" id="btnModalCancel" class="btn btn-default waves-effect waves-light" data-dismiss="modal">취소하기</button>
		                <button type="button" id="btnCommentUpdate" class="btn btn-primary waves-effect waves-light" onclick="updateComment()">수정하기</button>
		                <button type="button" id="btnCommentDelete" class="btn btn-danger waves-effect waves-light">삭제하기</button>
		            </div>
		        </div>
		    </div>
		</div>
	</th:block>

	<th:block layout:fragment="content">
		<div class="card-content">
			<form class="form-horizontal form-view" th:object="${board}">
				<div class="form-group">
					<label for="inp-type-1" class="col-sm-2 control-label">기사제목</label>
					<div class="col-sm-10">
						<p class="form-control" th:text="*{title}"></p>
					</div>
				</div>
				<div class="form-group">
					<label for="inp-type-5" class="col-sm-2 control-label">링크(URL)</label>
					<div class="col-sm-10">
						<p class="form-control" th:text="*{content}"></p>
					</div>
				</div>

				<div class="form-group">
					<label for="inp-type-5" class="col-sm-2 control-label">등록일</label>
					<div class="col-sm-10">
						<p class="form-control" th:text="*{#temporals.format( insertTime, 'yyyy-MM-dd' )}"></p>
					</div>
				</div>
			</form>

			<div class="btn_wrap text-center" th:object="${params}">
				<a th:href="|@{/adminBoard.do}*{makeQueryString(currentPageNo)}|" class="btn btn-default waves-effect waves-light">뒤로가기</a>
				<a th:href="|@{/board/write.do}*{makeQueryString(currentPageNo)}&idx=${board.idx}|" class="btn btn-primary waves-effect waves-light">수정하기</a>
				<button type="button" class="btn btn-danger waves-effect waves-light" th:onclick="deleteBoard([[ ${board.idx} ]], [[ *{makeQueryString(currentPageNo)} ]])">삭제하기</button>
			</div>

		</div>
		<!-- /.card-content -->
	</th:block>
	<th:block layout:fragment="script">
		<script th:inline="javascript">
			/*<![CDATA[*/

			$(function() {
				printCommentList();
			});

			function openModal(idx, writer, content) {

				$("#commentModal").modal("toggle");

				document.getElementById("modalWriter").value = writer;
				document.getElementById("modalContent").value = content;

				document.getElementById("btnCommentUpdate").setAttribute("onclick", "updateComment("+ idx +")");
				document.getElementById("btnCommentDelete").setAttribute("onclick", "deleteComment("+ idx +")");
			}

			function insertComment(boardIdx) {

				var content = document.getElementById("content");
				if (isEmpty(content.value) == true) {
					content.setAttribute("placeholder", "댓글을 입력해 주세요.");
					content.focus();
					return false;
				}

				var uri = /*[[ @{/comments} ]]*/;
				var headers = {"Content-Type": "application/json", "X-HTTP-Method-Override": "POST"};
				var params = {"boardIdx": boardIdx, "content": content.value, "writer": "관리자"};

				$.ajax({
					url: uri,
					type: "POST",
					headers: headers,
					dataType: "json",
					data: JSON.stringify(params),
					success: function(response) {
						if (response.result == false) {
							alert("댓글 등록에 실패하였습니다.");
							return false;
						}

						printCommentList();
						content.value = "";
					},
					error: function(xhr, status, error) {
						alert("에러가 발생하였습니다.");
						return false;
					}
				});
			}
			/*[- end of function -]*/

			function updateComment(idx) {

				var writer = document.getElementById("modalWriter");
				var content = document.getElementById("modalContent");
			
				var uri = [[ @{/comments/} ]] + idx;
				var headers = {"Content-Type": "application/json", "X-HTTP-Method-Override": "PATCH"};
				var params = {"idx": idx, "writer": writer.value, "content": content.value};
			
				$.ajax({
					url: uri,
					type: "PATCH",
					headers: headers,
					dataType: "json",
					data: JSON.stringify(params),
					success: function(response) {
						if (response.result == false) {
							alert("댓글 수정에 실패하였습니다.");
							return false;
						}

						printCommentList();
						$("#commentModal").modal("hide");
					},
					error: function(xhr, status, error) {
						alert("에러가 발생하였습니다.");
						return false;
					}
				});
			}
			/*[- end of function -]*/

			function deleteComment(idx) {

				if (!confirm('댓글을 삭제하시겠어요?')) {
					return false;
				}

				var uri = [[ @{/comments/} ]] + idx;
				var headers = {"Content-Type": "application/json", "X-HTTP-Method-Override": "DELETE"};

				$.ajax({
					url: uri,
					type: "DELETE",
					headers: headers,
					dataType: "json",
					success: function(response) {
						if (response.result == false) {
							alert("댓글 삭제에 실패하였습니다.");
							return false;
						}

						printCommentList();
						$("#commentModal").modal("hide");
					},
					error: function(xhr, status, error) {
						alert("에러가 발생하였습니다.");
						return false;
					}
				});
			}
			/*[- end of function -]*/

			function printCommentList() {

				var uri = /*[[ @{/comments/} + ${board.idx} ]]*/;

				$.get(uri, function(response) {
					if (isEmpty(response) == false) {
						var commentsHtml = "";

						$(response.commentList).each(function(idx, comment) {
							commentsHtml += `
								<li>
									<span class="name">${comment.writer}</span>
									<span class="desc">${comment.content}</span>
									<span class="time">${moment(comment.insertTime).format('YYYY-MM-DD HH:mm:ss')}</span>
									<button type="button" onclick="openModal(${comment.idx}, '${comment.writer}', '${comment.content}' )" class="btn btn-xs btn-circle"><i class="glyphicon glyphicon-pencil" aria-hidden="true"></i></button>
								</li>
							`;
						});

						$(".notice-list").html(commentsHtml);
					}
				}, "json");
			}
			/*[- end of function -]*/

			function deleteBoard(idx, queryString) {

				if (confirm(idx + "번 게시글을 삭제할까요?")) {
					var uri = /*[[ @{/board/delete.do} ]]*/;
					var html = "";

					html += '<form name="dataForm" action="'+uri+'" method="post">';
					html += '<input type="hidden" name="idx" value="'+idx+'" />';

					/*[- 쿼리 스트링을 오브젝트 형태로 변환 -]*/
					queryString = new URLSearchParams(queryString);
					queryString.forEach(function(value, key) {
						if (isEmpty(value) == false) {
							html += '<input type="hidden" name="' + key + '" value="' + value + '" />';
						}
					});

					html += '</form>';

					$("body").append(html);
					document.dataForm.submit();
				}
			}
			/*[- end of function -]*/

			/*]]>*/
		</script>
	</th:block>
</html>